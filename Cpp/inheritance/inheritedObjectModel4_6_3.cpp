#include <iostream>
#include <string>

using namespace std;

// 继承是面向对象三大特征之一
// 有些类与类之间存在特殊的关系
// 我们发现定义这些类时，下级别的成员拥有上一级的共性，还有自己的特性
// 这时候我们就可以考虑利用继承技术，减少重复代码

// 继承的基本语法：
// 例如我们看到很多网站中，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中间内容不同
// 接下来我们分别利用普通写法和继承的写法来实现网页中的内容，看一下继承的意义和好处

// 继承的好处：
// 减少重复的代码

// 语法：
// class 子类 ： 继承方式 父类
// 别称：
// 子类： 派生类
// 父类： 基类

// 派生类中的成员，包含两大部分
// 一类是基类继承过来的，一类是自己添加的成员
// 从基类继承过来的表现其共性，而新增的成员体现了其个性

// 继承的方式有三种：
// 1.公共继承
// 2.保护继承
// 3.私有继承

// 问题：
// 从父类继承过来的成员，哪些属于子类对象？

// 在父类中所有的属性（非静态成员属性）都会被子类继承下去
// 父类中私有成员属性被编译器隐藏了，因此访问不到，但是确实继承了下来

class Base
{
public:
    int m_A;
protected:
    int m_B;
private:
    int m_C;
};

class Son : public Base
{
public:
    int m_D;
};

void test01()
{
    // 12
    cout << "sizeof Base = " << sizeof(Base) << endl;
    // 12 + 4 = 16
    // 在父类中所有的属性（非静态成员属性）都会被子类继承下去
    // 父类中私有成员属性被编译器隐藏了，因此访问不到，但是确实继承了下来
    cout << "sizeof Son = " << sizeof(Son) << endl;
}

int main(int argc, char *argv[])
{
    test01();

    return 0;
}