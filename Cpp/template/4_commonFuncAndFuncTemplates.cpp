#include<iostream>

using namespace std;
// 模板特点
// 模板不可以直接使用，他只是一个框架
// 模板的通用并不是万能的

// C++另一种编程思想就是 泛型编程 ，主要利用的技术的 模板
// C++提供两种模板机制：1.函数模板、2.类模板

// 注意事项
// 自动推类型推导，必须推导出一致的数据类型 T 才可以使用
// 摸版必须要确定出 T 的数据类型，才可以使用

// 普通函数与模板函数区别
// 1.普通函数调用时发生自动类型转换（隐式类型转换）
// 2.函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换
// 3.如果利用显示指定类型方式 "<类型>"，明确告诉，转换为该类型，可以发生隐式类型转换

// ######## 总结：建议使用显示指定类型的方式，调用函数模板，因为可以自己确定通用类型 T ########

// 普通函数
int myAdd(int a, int b)
{
    return a + b;
}

// 函数模板
template<typename T>
T myAdd01(T a, T b)
{
    return a + b;
}

void test01()
{
    float a = 10.0;
    float b = 20.0;
    char c = 'c';
    cout << myAdd(a, c) << endl;// 会发生隐式类型转换
    cout << myAdd01(a, b) << endl; // 自动类型推导，不会发生隐式类型转换
    cout << myAdd01<int>(a, c) << endl; // 显示指定类型，会发生隐式类型转换
}

int main()
{
    test01();

    return 0;
}