#include<iostream>
#include<list>
#include<string>

using namespace std;

// list 链表 基本
// 功能：将数据进行链式存储
// 链表（list）：是一种物理存储单元的非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的

// 链表的组成：链表是由一系列 节点 组成
// 节点的组成：一个是存储数据元素的 数据域，另一个是存储下一个节点地址的 指针域
// STL中的链表是双向训话链表

// 由于链表的存储方式不是连续的内存空间，因此链表 list 中的迭代器只能支持 前移 和 后移,属于 双向迭代器

// list 优点：
// 1.采用动态存储分配，不会造成内存浪费和溢出
// 2.链表执行插入和删除操作十分方便，修改指即可，不需要移动大量元素

// list 缺点
// 链表灵活，但是空间（指针域）和时间（遍历）额消耗大

// list 有一个重要的性质，插入操作和删除操作都不会造成原有list 迭代器的失效，这在vector是不成立的

// 总结： STL中 list 和 vector 是两个最常用的容器，各有优缺点
 
void test01()
{

}

int main()
{
    test01();
    return 0;
}